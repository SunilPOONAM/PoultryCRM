@model PoultryCRM.Models.Registration
@{
    Layout = null;
}

<html class="chrome">
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <title>Sign Up | Bootstrap Based Admin Template - Material Design</title>
    <!-- Favicon-->
    <link rel="icon" href="../../favicon.ico" type="image/x-icon">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,700&amp;subset=latin,cyrillic-ext" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" type="text/css">

    <!-- Bootstrap Core Css -->
    <link href="~/Resources/plugins/bootstrap/css/bootstrap.css" rel="stylesheet">

    <!-- Waves Effect Css -->
    <link href="~/Resources/plugins/node-waves/waves.css" rel="stylesheet">

    <!-- Animation Css -->
    <link href="~/Resources/plugins/animate-css/animate.css" rel="stylesheet">

    <!-- Custom Css -->
    <link href="~/Resources/css/style.css" rel="stylesheet">
</head>

<body class="signup-page ls-closed">
    <div class="signup-box">
        <div class="logo">
            <a href="javascript:void(0);">Registration<b></b></a>
          
        </div>
        <div class="card">
            <div class="body">
                <form  action="/Home/Register" method="post">
                    <div class="msg">Register a new membership</div>
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="material-icons">person</i>
                        </span>
                        <div class="form-line">
                            
                            @Html.TextBoxFor(model => model.Name, new { @placeholder = "Name Surname", @class = "form-control", @autocomplete = "off", Required = "true" })


                        </div>
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="material-icons">email</i>
                        </span>
                        <div class="form-line">
                          
                            @Html.TextBoxFor(model => model.Email, new { @placeholder = "Email Address", @class = "form-control", @autocomplete = "off", Required = "true" })
                        </div>
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="material-icons">email</i>
                        </span>
                        <div class="form-line">

                            @Html.TextBoxFor(model => model.Mobile_No, new { @placeholder = "Mobile Number", @class = "form-control", @autocomplete = "off", Required = "true" })
                        </div>
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="material-icons">lock</i>
                        </span>
                        <div class="form-line">
                            
                            @Html.TextBoxFor(model => model.Password, new { @placeholder = "Password", @class = "form-control", @autocomplete = "off", Required = "true", @onKeyUp = "checkPasswordStrength();" })
                        </div>
                        <span id="password-strength-status"></span>
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="material-icons">lock</i>
                        </span>
                        <div class="form-line">
                           
                            @Html.TextBoxFor(model => model.Confirm_Password, new { @placeholder = "Confirm Password", @class = "form-control", @autocomplete = "off", Required = "true", @onKeyUp = "PasswordMatch();", })
                            <span id="password-Match-status" style="color:red"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="checkbox" name="terms" id="terms" class="filled-in chk-col-pink">
                        <label for="terms">I read and agree to the <a href="javascript:void(0);">terms of usage</a>.</label>
                    </div>

                    <button class="btn btn-block btn-lg bg-pink waves-effect" type="submit" id="subbtn">SIGN UP</button>

                    <div class="m-t-25 m-b--5 align-center">
                        <a href="/Home/Login">You already have a membership?</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Jquery Core Js -->
    <script src="~/Resources/plugins/jquery/jquery.min.js"></script>

    <!-- Bootstrap Core Js -->
    <script src="~/Resources/plugins/bootstrap/js/bootstrap.js"></script>

    <!-- Waves Effect Plugin Js -->
    <script src="~/Resources/plugins/node-waves/waves.js"></script>

    <!-- Validation Plugin Js -->
    <script src="~/Resourcesplugins/jquery-validation/jquery.validate.js"></script>

    <!-- Custom Js -->
    <script src="~/Resourcesjs/admin.js"></script>
    <script src="~/Resourcesjs/pages/examples/sign-up.js"></script>

    <script>
        function PasswordMatch() {
            var newpass = $("#Password").val();
            var newchnagepass = $("#Confirm_Password").val();
            if (newchnagepass != newpass) {
                $('#password-Match-status').removeClass();
                $('#password-Match-status').addClass('Matching-password');
                $('#password-Match-status').html("Password is not matching new password.");
                $('#subbtn').attr('disabled', true);
            }
            else {
                $('#password-Match-status').removeClass();
                $('#password-Match-status').html("");
                $('#subbtn').attr('disabled', false);

            }
        }
        function checkPasswordStrength() {
            var number = /([0-9])/;
            var alphabets = /([a-zA-Z])/;
            var special_characters = /([~,!,@@,$,%,^,&,*,-,_,+,=,?,>,<])/;
            if ($('#Password').val().length < 6) {
                $('#password-strength-status').removeClass();
                $('#password-strength-status').addClass('weak-password');
                $('#password-strength-status').html("Weak (should be atleast 6 characters.)");
                $('#subbtn').attr('disabled', true);
            } else {
                if ($('#Password').val().match(number) && $('#Password').val().match(alphabets) && $('#Password').val().match(special_characters)) {
                    $('#password-strength-status').removeClass();
                    $('#password-strength-status').addClass('strong-password');
                    $('#password-strength-status').html("Strong");
                    $('#subbtn').attr('disabled', false);
                } else {
                    $('#password-strength-status').removeClass();
                    $('#password-strength-status').addClass('medium-password');
                    $('#password-strength-status').html("Medium (should include alphabets, numbers and special characters.)");
                    $('#subbtn').attr('disabled', true);
                }
            }
        }
    </script>
</body>
</html>
